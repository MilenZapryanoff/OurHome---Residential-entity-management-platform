name: Build and Test OurHome app

on:
  #push:
  #  branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
jobs:
  Build-and-Test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ourhome_test
          MYSQL_LOG_CONSOLE: "error"
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3 --health-start-period=30s
        ports:
          - 3306:3306

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Check if MySQL instance is running...
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h "127.0.0.1" --password=${{ secrets.DB_PASSWORD }} --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Run Unit tests
      run: mvn test
      env:
        DB_URL: jdbc:mysql://localhost:3306/ourhome_test
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Run Integration tests
      run: mvn verify
      env:
        DB_URL: jdbc:mysql://localhost:3306/ourhome_test
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Build JAR file
      if: success()
      run: mvn clean package -DskipTests
      env:
        DB_URL: jdbc:mysql://localhost:3306/ourhome_test
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Build Docker image
      if: success()
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker build -t ourhome:${{ github.sha }} .
        docker tag ourhome:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/ourhome:${{ github.sha }}
        docker tag ourhome:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/ourhome:latest

    - name: Push Docker image to DockerHub
      if: success()
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/ourhome:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/ourhome:latest
